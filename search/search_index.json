{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"BlueRockTEL API documentation","title":"Home"},{"location":"#bluerocktel-api-documentation","text":"","title":"BlueRockTEL API documentation"},{"location":"api/","text":"Api Get API version and status GET /api/version ```$ curl --request GET \\ --url https://telecom0517-admin.bluerocktel.net/api/version \\ --header 'authorization: Bearer {token} ' #### Response ```{ \"version\": \"1.0\", \"status\": \"ok\", \"vendor\": \"BlueRockTEL\", \"url\": \"https:\\/\\/bluerocktel.com\" }","title":"Api"},{"location":"api/#api","text":"","title":"Api"},{"location":"api/#get-api-version-and-status","text":"GET /api/version ```$ curl --request GET \\ --url https://telecom0517-admin.bluerocktel.net/api/version \\ --header 'authorization: Bearer {token} ' #### Response ```{ \"version\": \"1.0\", \"status\": \"ok\", \"vendor\": \"BlueRockTEL\", \"url\": \"https:\\/\\/bluerocktel.com\" }","title":"Get API version and status"},{"location":"bluerocktel_pack/","text":"Le pack BlueRockTEL Votre instance BlueRockTEL vient d'\u00eatre livr\u00e9e : nous sommes tr\u00e8s heureux de votre choix et nous vous remercions de votre confiance. Vous pouvez commencer \u00e0 utiliser BlueRockTEL imm\u00e9diatement, en commen\u00e7ant \u00e0 int\u00e9grer vos clients, vos dossiers clients et les services. Ceci est possible soit au travers de l'interface Web, soit au travers de l'API BlueRockTEL. Toutefois, dans la plupart des cas, c'est notre \u00e9quipe d'int\u00e9gration qui va se charger de rentrer vos donn\u00e9es dans BlueRockTEL, dans le but de vous faire gagner du temps. \u00c0 cette fin, nous avons cr\u00e9\u00e9 le \"pack BlueRockTEL\", un tableur comprenant plusieurs onglets, dans lequel vous allez pouvoir ins\u00e9rer vos donn\u00e9es actuelles. Ces pages vous donnent des informations utiles sur la mani\u00e8re de compl\u00e9ter le pack BlueRockTEL, en vous d\u00e9crivant chaque onglet du document de tableur, et chaque colonne de chaque onglet.","title":"Le pack BlueRockTEL"},{"location":"bluerocktel_pack/#le-pack-bluerocktel","text":"Votre instance BlueRockTEL vient d'\u00eatre livr\u00e9e : nous sommes tr\u00e8s heureux de votre choix et nous vous remercions de votre confiance. Vous pouvez commencer \u00e0 utiliser BlueRockTEL imm\u00e9diatement, en commen\u00e7ant \u00e0 int\u00e9grer vos clients, vos dossiers clients et les services. Ceci est possible soit au travers de l'interface Web, soit au travers de l'API BlueRockTEL. Toutefois, dans la plupart des cas, c'est notre \u00e9quipe d'int\u00e9gration qui va se charger de rentrer vos donn\u00e9es dans BlueRockTEL, dans le but de vous faire gagner du temps. \u00c0 cette fin, nous avons cr\u00e9\u00e9 le \"pack BlueRockTEL\", un tableur comprenant plusieurs onglets, dans lequel vous allez pouvoir ins\u00e9rer vos donn\u00e9es actuelles. Ces pages vous donnent des informations utiles sur la mani\u00e8re de compl\u00e9ter le pack BlueRockTEL, en vous d\u00e9crivant chaque onglet du document de tableur, et chaque colonne de chaque onglet.","title":"Le pack BlueRockTEL"},{"location":"bluerocktel_pack_clients/","text":"Clients Le pack BlueRockTEL Compte client customerAccount, string Il s'agit du compte vous permettant d'identifier le client. Par d\u00e9faut, BlueRockTEL cr\u00e9e un compte de type 'CL0001' pour chaque client, mais vous pouvez choisir le format qui vous convient le mieux. Si vous n'utilisez pas de comptes clients, vous pouvez laisser cette colonne vide. Compte comptable accountsReference, string Identification du client en comptabilit\u00e9. \u00c0 n'indiquer que s'il est n\u00e9cessaire (notamment pour vos exports comptables) et diff\u00e9rent du compte client. Raison sociale name, string La colonne Raison sociale doit toujours \u00eatre compl\u00e9t\u00e9e. Elle peut \u00eatre remplac\u00e9e par le nom complet du client dans le cas d'une personne physique. SIRET registrationNumber, string Num\u00e9ro de TVA intracommunautaire taxRegistrationNumber, string Type de soci\u00e9t\u00e9 type Capital social capital Premi\u00e8re ligne d'adresse mainAddressLine1 Pour un client multisite, l'adresse \u00e0 indiquer dans la fiche client est toujours l'adresse du si\u00e8ge social. Les adresses des diff\u00e9rents sites ou \u00e9tablissements secondaires seront indiqu\u00e9es au niveau des dossiers clients. Seconde ligne d'adresse mainAddressLine2 Code Postal postalCode Ville mainAddressCity Site Web website Url du site web du client Actif active: boolean, default true Cette colonne permet d'indiquer si le client est actif ou non. Indiquez 1 pour actif ou 0 pour inactif. Revendeur isReseller: boolean, default false Cette colonne permet d'indiquer si le client agit comme un revendeur de vos produits et services. Indiquez 1 s'il est revendeur et 0 dans le cas contraire. Niveau de revendeur resellerLevel, integer Dans le cas ou le client est revendeur, et si vous avez plusieurs niveaux de revendeurs, cette colonne vous permet d'indiquer \u00e0 quel niveau il appartient. Cette information sera utile, par exemple, pour appliquer automatiquement des remises revendeurs. Cette colonne accepte un nombre entier, par exemple 1, 2 ou 3. Facturer la TVA chargeVAT, boolean default true Cette colonne vous permet d'indiquer si vous facturez de la TVA \u00e0 votre client ou non. Par exemple, si votre entreprise est \u00e9tablie en France et si votre client est \u00e9tabli dans un autre pays de l'Union Europ\u00e9enne, vous ne lui facturerez probablement pas la TVA. Indiquer 1 si vous facturez de la TVA \u00e0 votre client, 0 dans le cas contraire. Appliquer la TVA auto-liquid\u00e9e (op\u00e9rateur Arcep) applyVATAutoReverseOperators, boolean default false Si \u00e0 la fois votre entreprise et votre client sont op\u00e9rateurs d\u00e9clar\u00e9s aupr\u00e8s de l'Arcep, cette colonne vous permet d'indiquer que vous souhaitez appliquer le m\u00e9canisme de TVA auto-liquid\u00e9e sur les services Telecom. Indiquer 1 si vous souhaitez appliquer le m\u00e9canisme de TVA auto-liquid\u00e9e pour ce client, 0 dans le cas contraire. Client sous contrat d'astreinte onCallDuty, boolean default false Cette colonne vous permet d'indiquer si votre client b\u00e9n\u00e9ficie d'un contrat d'astreinte. Cette information est utile si, par exemple, votre syst\u00e8me de t\u00e9l\u00e9phonie interroge l'API de BlueRockTEL pour des routages d'appels entrants. Indiquer 1 si votre client b\u00e9n\u00e9ficie d'un contrat d'astreinte, 0 dans le cas contraire. Client VIP vip, boolean default false Cette colonne vous permet d'indiquer si votre client \u00e0 un statut VIP. Cette information est utile si, par exemple, votre syst\u00e8me de t\u00e9l\u00e9phonie interroge l'API de BlueRockTEL pour des routages entrants. Un usage typique est de reconna\u00eetre le num\u00e9ro de l'appelant et de l'envoyer vers le support prioritaire.","title":"Clients"},{"location":"bluerocktel_pack_clients/#clients","text":"Le pack BlueRockTEL","title":"Clients"},{"location":"bluerocktel_pack_clients/#compte-client","text":"customerAccount, string Il s'agit du compte vous permettant d'identifier le client. Par d\u00e9faut, BlueRockTEL cr\u00e9e un compte de type 'CL0001' pour chaque client, mais vous pouvez choisir le format qui vous convient le mieux. Si vous n'utilisez pas de comptes clients, vous pouvez laisser cette colonne vide.","title":"Compte client"},{"location":"bluerocktel_pack_clients/#compte-comptable","text":"accountsReference, string Identification du client en comptabilit\u00e9. \u00c0 n'indiquer que s'il est n\u00e9cessaire (notamment pour vos exports comptables) et diff\u00e9rent du compte client.","title":"Compte comptable"},{"location":"bluerocktel_pack_clients/#raison-sociale","text":"name, string La colonne Raison sociale doit toujours \u00eatre compl\u00e9t\u00e9e. Elle peut \u00eatre remplac\u00e9e par le nom complet du client dans le cas d'une personne physique.","title":"Raison sociale"},{"location":"bluerocktel_pack_clients/#siret","text":"registrationNumber, string","title":"SIRET"},{"location":"bluerocktel_pack_clients/#numero-de-tva-intracommunautaire","text":"taxRegistrationNumber, string","title":"Num\u00e9ro de TVA intracommunautaire"},{"location":"bluerocktel_pack_clients/#type-de-societe","text":"type","title":"Type de soci\u00e9t\u00e9"},{"location":"bluerocktel_pack_clients/#capital-social","text":"capital","title":"Capital social"},{"location":"bluerocktel_pack_clients/#premiere-ligne-dadresse","text":"mainAddressLine1 Pour un client multisite, l'adresse \u00e0 indiquer dans la fiche client est toujours l'adresse du si\u00e8ge social. Les adresses des diff\u00e9rents sites ou \u00e9tablissements secondaires seront indiqu\u00e9es au niveau des dossiers clients.","title":"Premi\u00e8re ligne d'adresse"},{"location":"bluerocktel_pack_clients/#seconde-ligne-dadresse","text":"mainAddressLine2","title":"Seconde ligne d'adresse"},{"location":"bluerocktel_pack_clients/#code-postal","text":"postalCode","title":"Code Postal"},{"location":"bluerocktel_pack_clients/#ville","text":"mainAddressCity","title":"Ville"},{"location":"bluerocktel_pack_clients/#site-web","text":"website Url du site web du client","title":"Site Web"},{"location":"bluerocktel_pack_clients/#actif","text":"active: boolean, default true Cette colonne permet d'indiquer si le client est actif ou non. Indiquez 1 pour actif ou 0 pour inactif.","title":"Actif"},{"location":"bluerocktel_pack_clients/#revendeur","text":"isReseller: boolean, default false Cette colonne permet d'indiquer si le client agit comme un revendeur de vos produits et services. Indiquez 1 s'il est revendeur et 0 dans le cas contraire.","title":"Revendeur"},{"location":"bluerocktel_pack_clients/#niveau-de-revendeur","text":"resellerLevel, integer Dans le cas ou le client est revendeur, et si vous avez plusieurs niveaux de revendeurs, cette colonne vous permet d'indiquer \u00e0 quel niveau il appartient. Cette information sera utile, par exemple, pour appliquer automatiquement des remises revendeurs. Cette colonne accepte un nombre entier, par exemple 1, 2 ou 3.","title":"Niveau de revendeur"},{"location":"bluerocktel_pack_clients/#facturer-la-tva","text":"chargeVAT, boolean default true Cette colonne vous permet d'indiquer si vous facturez de la TVA \u00e0 votre client ou non. Par exemple, si votre entreprise est \u00e9tablie en France et si votre client est \u00e9tabli dans un autre pays de l'Union Europ\u00e9enne, vous ne lui facturerez probablement pas la TVA. Indiquer 1 si vous facturez de la TVA \u00e0 votre client, 0 dans le cas contraire.","title":"Facturer la TVA"},{"location":"bluerocktel_pack_clients/#appliquer-la-tva-auto-liquidee-operateur-arcep","text":"applyVATAutoReverseOperators, boolean default false Si \u00e0 la fois votre entreprise et votre client sont op\u00e9rateurs d\u00e9clar\u00e9s aupr\u00e8s de l'Arcep, cette colonne vous permet d'indiquer que vous souhaitez appliquer le m\u00e9canisme de TVA auto-liquid\u00e9e sur les services Telecom. Indiquer 1 si vous souhaitez appliquer le m\u00e9canisme de TVA auto-liquid\u00e9e pour ce client, 0 dans le cas contraire.","title":"Appliquer la TVA auto-liquid\u00e9e (op\u00e9rateur Arcep)"},{"location":"bluerocktel_pack_clients/#client-sous-contrat-dastreinte","text":"onCallDuty, boolean default false Cette colonne vous permet d'indiquer si votre client b\u00e9n\u00e9ficie d'un contrat d'astreinte. Cette information est utile si, par exemple, votre syst\u00e8me de t\u00e9l\u00e9phonie interroge l'API de BlueRockTEL pour des routages d'appels entrants. Indiquer 1 si votre client b\u00e9n\u00e9ficie d'un contrat d'astreinte, 0 dans le cas contraire.","title":"Client sous contrat d'astreinte"},{"location":"bluerocktel_pack_clients/#client-vip","text":"vip, boolean default false Cette colonne vous permet d'indiquer si votre client \u00e0 un statut VIP. Cette information est utile si, par exemple, votre syst\u00e8me de t\u00e9l\u00e9phonie interroge l'API de BlueRockTEL pour des routages entrants. Un usage typique est de reconna\u00eetre le num\u00e9ro de l'appelant et de l'envoyer vers le support prioritaire.","title":"Client VIP"},{"location":"customers/","text":"Customers Store a new customer (test) POST /api/v1/customers Parameters The only mandatory parameter is the name: brand_id: branding attached to this customer, default 1 representative_id: salesperson in charge of the customer customerAccount: customerAccount, automatically created if not provided accountsReference: reference in the accounting system, if different from customerAccount name*: name of the customer brand: trading name of the customer, if exists registrationNumber: registration number of the customer taxRegistrationNumber: tax registration number of the customer type: type of company capital: capital in your currency, mainAddressLine1 mainAddressLine2 mainAddressCity mainAddressCountry website active: boolean, default true isReseller : boolean, default false resellerLevel: integer, chargeVAT: boolean, default true (set to false if you are not charging VAT to this customer) applyVATAutoReverseOperators: boolean, default false (set to true if you apply auto-reverse for VAT for this customer on Telecom services) onCallDuty: boolean, default false (set to true if the customer is under on call duty contract) vip: boolean, default false (set to true if customer is vip) Sample request: Curl: curl --request POST \\ --url 'https://bluerockteladmin.test/api/v1/customers?name=Soci%C3%A9t%C3%A9&customerAccount=123456' \\ --header 'authorization: Bearer {token}' PHP: <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => \"https://bluerockteladmin.test/api/v1/customers?name=Soci%C3%A9t%C3%A9&customerAccount=123456\", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => \"\", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => \"POST\", CURLOPT_POSTFIELDS => \"\", CURLOPT_HTTPHEADER => array( \"authorization: Bearer {token}\" ), )); $response = curl_exec($curl); $err = curl_error($curl); curl_close($curl); if ($err) { echo \"cURL Error #:\" . $err; } else { echo $response; } Python: import http.client conn = http.client.HTTPSConnection(\"bluerockteladmin.test\") payload = \"\" headers = { 'authorization': \"Bearer {token}\" } conn.request(\"POST\", \"/api/v1/customers?name=Soci%C3%A9t%C3%A9&customerAccount=123456\", payload, headers) res = conn.getresponse() data = res.read() print(data.decode(\"utf-8\")) Response: The API returns the id of the created customer: { \"response\": 113 } Get a customer (from customer id) GET /api/v1/customers/{customer} Parameters: customer*: customer id Sample request Curl: curl --request GET \\ --url https://bluerockteladmin.test/api/v1/customers/113 \\ --header 'authorization: Bearer {token}' PHP: <?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => \"https://bluerockteladmin.test/api/v1/customers/113\", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => \"\", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => \"GET\", CURLOPT_POSTFIELDS => \"\", CURLOPT_HTTPHEADER => array( \"authorization: Bearer {token}\" ), )); $response = curl_exec($curl); $err = curl_error($curl); curl_close($curl); if ($err) { echo \"cURL Error #:\" . $err; } else { echo $response; } Python: import http.client conn = http.client.HTTPSConnection(\"bluerockteladmin.test\") payload = \"\" headers = { 'authorization': \"Bearer {token}\" } conn.request(\"GET\", \"/api/v1/customers/113\", payload, headers) res = conn.getresponse() data = res.read() print(data.decode(\"utf-8\")) Response { \"customer\": { \"id\": 113, \"brand_id\": 1, \"representative_id\": null, \"customerAccount\": \"123456\", \"accountsReference\": null, \"name\": \"Soci\u00e9t\u00e9\", \"brand\": null, \"registrationNumber\": null, \"taxRegistrationNumber\": null, \"mainContactFirstName\": null, \"mainContactLastName\": null, \"type\": null, \"capital\": null, \"activityCode\": null, \"sector_id\": null, \"origin_id\": null, \"mainAddressLine1\": null, \"mainAddressLine2\": null, \"mainAddressPostalCode\": null, \"mainAddressCity\": null, \"mainAddressCountry\": null, \"emailAddress\": null, \"accountEmailAddress\": null, \"website\": null, \"phone\": null, \"mobilePhone\": null, \"fax\": null, \"logo\": null, \"active\": 1, \"activity\": null, \"category\": null, \"qualification\": null, \"prospection_code_id\": 1, \"isReseller\": 0, \"resellerLevel\": 0, \"language_id\": 1, \"acceptEmails\": 1, \"acceptCalls\": 1, \"supplier\": 0, \"chargeVAT\": 1, \"applyVATAutoReverseOperators\": 0, \"language\": null, \"comment\": null, \"mergeInvoices\": 1, \"isGroupingAccount\": 0, \"chargeGroupingAccount\": null, \"isPayer\": 0, \"ftp\": 0, \"ftpServer\": null, \"ftpUsername\": null, \"ftpPassword\": null, \"ftpHomeDirectory\": null, \"ftpAccountId\": null, \"ftpAssociatedEmail\": null, \"quickSearch\": null, \"suppliers\": null, \"onCallDuty\": 0, \"vip\": 0, \"canSendSms\": 0, \"smsAuthorisation\": null, \"numberOfInvoices\": 0, \"lastInvoice\": null, \"quickSearchLabel\": null, \"quickSearchIndex\": 0, \"created_at\": \"2020-08-04T10:42:27.000000Z\", \"updated_at\": \"2020-08-04T10:42:27.000000Z\" } } Get a customer (from customerAccount) GET /api/v1/customerAccounts/{customerAccount} Same as previous, using the customerAccount as parameter instead of BlueRockTEL's customer id. curl --request GET \\ --url https://bluerockteladmin.test/api/v1/customerAccounts/123456 \\ --header 'authorization: Bearer {token}' Update a customer PUT /api/v1/customers/{customer} Parameters: customer*: customer id brand_id: branding attached to this customer, default 1 representative_id: salesperson in charge of the customer customerAccount: customerAccount, automatically created if not provided accountsReference: reference in the accounting system, if different from customerAccount name: name of the customer brand: trading name of the customer, if exists registrationNumber: registration number of the customer taxRegistrationNumber: tax registration number of the customer type: type of company capital: capital in your currency, mainAddressLine1 mainAddressLine2 mainAddressCity mainAddressCountry website active: boolean, default true isReseller : boolean, default false resellerLevel: integer, chargeVAT: boolean, default true (set to false if you are not charging VAT to this customer) applyVATAutoReverseOperators: boolean, default false (set to true if you apply auto-reverse for VAT for this customer on Telecom services) onCallDuty: boolean, default false (set to true if the customer is under on call duty contract) vip: boolean, default false (set to true if customer is vip)","title":"Customers"},{"location":"customers/#customers","text":"","title":"Customers"},{"location":"customers/#store-a-new-customer-test","text":"POST /api/v1/customers","title":"Store a new customer (test)"},{"location":"customers/#parameters","text":"The only mandatory parameter is the name: brand_id: branding attached to this customer, default 1 representative_id: salesperson in charge of the customer customerAccount: customerAccount, automatically created if not provided accountsReference: reference in the accounting system, if different from customerAccount name*: name of the customer brand: trading name of the customer, if exists registrationNumber: registration number of the customer taxRegistrationNumber: tax registration number of the customer type: type of company capital: capital in your currency, mainAddressLine1 mainAddressLine2 mainAddressCity mainAddressCountry website active: boolean, default true isReseller : boolean, default false resellerLevel: integer, chargeVAT: boolean, default true (set to false if you are not charging VAT to this customer) applyVATAutoReverseOperators: boolean, default false (set to true if you apply auto-reverse for VAT for this customer on Telecom services) onCallDuty: boolean, default false (set to true if the customer is under on call duty contract) vip: boolean, default false (set to true if customer is vip)","title":"Parameters"},{"location":"customers/#sample-request","text":"","title":"Sample request:"},{"location":"customers/#curl","text":"curl --request POST \\ --url 'https://bluerockteladmin.test/api/v1/customers?name=Soci%C3%A9t%C3%A9&customerAccount=123456' \\ --header 'authorization: Bearer {token}'","title":"Curl:"},{"location":"customers/#php","text":"<?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => \"https://bluerockteladmin.test/api/v1/customers?name=Soci%C3%A9t%C3%A9&customerAccount=123456\", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => \"\", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => \"POST\", CURLOPT_POSTFIELDS => \"\", CURLOPT_HTTPHEADER => array( \"authorization: Bearer {token}\" ), )); $response = curl_exec($curl); $err = curl_error($curl); curl_close($curl); if ($err) { echo \"cURL Error #:\" . $err; } else { echo $response; }","title":"PHP:"},{"location":"customers/#python","text":"import http.client conn = http.client.HTTPSConnection(\"bluerockteladmin.test\") payload = \"\" headers = { 'authorization': \"Bearer {token}\" } conn.request(\"POST\", \"/api/v1/customers?name=Soci%C3%A9t%C3%A9&customerAccount=123456\", payload, headers) res = conn.getresponse() data = res.read() print(data.decode(\"utf-8\"))","title":"Python:"},{"location":"customers/#response","text":"The API returns the id of the created customer: { \"response\": 113 }","title":"Response:"},{"location":"customers/#get-a-customer-from-customer-id","text":"GET /api/v1/customers/{customer}","title":"Get a customer (from customer id)"},{"location":"customers/#parameters_1","text":"customer*: customer id","title":"Parameters:"},{"location":"customers/#sample-request_1","text":"","title":"Sample request"},{"location":"customers/#curl_1","text":"curl --request GET \\ --url https://bluerockteladmin.test/api/v1/customers/113 \\ --header 'authorization: Bearer {token}'","title":"Curl:"},{"location":"customers/#php_1","text":"<?php $curl = curl_init(); curl_setopt_array($curl, array( CURLOPT_URL => \"https://bluerockteladmin.test/api/v1/customers/113\", CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => \"\", CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 30, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => \"GET\", CURLOPT_POSTFIELDS => \"\", CURLOPT_HTTPHEADER => array( \"authorization: Bearer {token}\" ), )); $response = curl_exec($curl); $err = curl_error($curl); curl_close($curl); if ($err) { echo \"cURL Error #:\" . $err; } else { echo $response; }","title":"PHP:"},{"location":"customers/#python_1","text":"import http.client conn = http.client.HTTPSConnection(\"bluerockteladmin.test\") payload = \"\" headers = { 'authorization': \"Bearer {token}\" } conn.request(\"GET\", \"/api/v1/customers/113\", payload, headers) res = conn.getresponse() data = res.read() print(data.decode(\"utf-8\"))","title":"Python:"},{"location":"customers/#response_1","text":"{ \"customer\": { \"id\": 113, \"brand_id\": 1, \"representative_id\": null, \"customerAccount\": \"123456\", \"accountsReference\": null, \"name\": \"Soci\u00e9t\u00e9\", \"brand\": null, \"registrationNumber\": null, \"taxRegistrationNumber\": null, \"mainContactFirstName\": null, \"mainContactLastName\": null, \"type\": null, \"capital\": null, \"activityCode\": null, \"sector_id\": null, \"origin_id\": null, \"mainAddressLine1\": null, \"mainAddressLine2\": null, \"mainAddressPostalCode\": null, \"mainAddressCity\": null, \"mainAddressCountry\": null, \"emailAddress\": null, \"accountEmailAddress\": null, \"website\": null, \"phone\": null, \"mobilePhone\": null, \"fax\": null, \"logo\": null, \"active\": 1, \"activity\": null, \"category\": null, \"qualification\": null, \"prospection_code_id\": 1, \"isReseller\": 0, \"resellerLevel\": 0, \"language_id\": 1, \"acceptEmails\": 1, \"acceptCalls\": 1, \"supplier\": 0, \"chargeVAT\": 1, \"applyVATAutoReverseOperators\": 0, \"language\": null, \"comment\": null, \"mergeInvoices\": 1, \"isGroupingAccount\": 0, \"chargeGroupingAccount\": null, \"isPayer\": 0, \"ftp\": 0, \"ftpServer\": null, \"ftpUsername\": null, \"ftpPassword\": null, \"ftpHomeDirectory\": null, \"ftpAccountId\": null, \"ftpAssociatedEmail\": null, \"quickSearch\": null, \"suppliers\": null, \"onCallDuty\": 0, \"vip\": 0, \"canSendSms\": 0, \"smsAuthorisation\": null, \"numberOfInvoices\": 0, \"lastInvoice\": null, \"quickSearchLabel\": null, \"quickSearchIndex\": 0, \"created_at\": \"2020-08-04T10:42:27.000000Z\", \"updated_at\": \"2020-08-04T10:42:27.000000Z\" } }","title":"Response"},{"location":"customers/#get-a-customer-from-customeraccount","text":"GET /api/v1/customerAccounts/{customerAccount} Same as previous, using the customerAccount as parameter instead of BlueRockTEL's customer id. curl --request GET \\ --url https://bluerockteladmin.test/api/v1/customerAccounts/123456 \\ --header 'authorization: Bearer {token}'","title":"Get a customer (from customerAccount)"},{"location":"customers/#update-a-customer","text":"PUT /api/v1/customers/{customer}","title":"Update a customer"},{"location":"customers/#parameters_2","text":"customer*: customer id brand_id: branding attached to this customer, default 1 representative_id: salesperson in charge of the customer customerAccount: customerAccount, automatically created if not provided accountsReference: reference in the accounting system, if different from customerAccount name: name of the customer brand: trading name of the customer, if exists registrationNumber: registration number of the customer taxRegistrationNumber: tax registration number of the customer type: type of company capital: capital in your currency, mainAddressLine1 mainAddressLine2 mainAddressCity mainAddressCountry website active: boolean, default true isReseller : boolean, default false resellerLevel: integer, chargeVAT: boolean, default true (set to false if you are not charging VAT to this customer) applyVATAutoReverseOperators: boolean, default false (set to true if you apply auto-reverse for VAT for this customer on Telecom services) onCallDuty: boolean, default false (set to true if the customer is under on call duty contract) vip: boolean, default false (set to true if customer is vip)","title":"Parameters:"}]}